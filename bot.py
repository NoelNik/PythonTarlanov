import DB
import telebot
from config import TOKEN
from telebot import types


bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def welcome(message):
    if (str(message.chat.id),) in DB.getQueue():
        bot.send_message(message.chat.id, "–í—ã –≤ –æ—á–µ—Ä–µ–¥–∏! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫.")
    else:
        DB.newUser(message.chat.id, message.from_user.username)
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±—É–¥—É —Ç–≤–æ–∏–º –ø–æ–º–æ—à–Ω–∏–∫–æ–º –¥–ª—è —É–¥–æ–±–Ω–æ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –∫ –Ω–æ–≤–æ–π —Ä–∞–±–æ—á–µ–π —Å—Ä–µ–¥–µ")
        # id —Å—Ç–∏–∫–µ—Ä–∞ —Å–æ–Ω–µ—á–∫–∏ "–ø—Ä–∏–≤–µ—Ç"
        sti = "CAACAgIAAxkBAAIFvWPxO2FdGo8UfSj66TNhsQABzAPKDwACmycAAnPWiUs2VR7lGKIKCy4E"
        bot.send_sticker(message.chat.id, sti)
        menu(message)


@bot.message_handler(commands=['help'])
def help_me_pls(message):
    if (str(message.chat.id),) in DB.getQueue():
        bot.send_message(message.chat.id, "–í—ã –≤ –æ—á–µ—Ä–µ–¥–∏! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫.")
    else:
        msg = "–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å –∞–¥–∞–ø—Ç–∞—Ü–∏–µ–π –Ω–∞ –Ω–æ–≤–æ–º —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ. " + \
              "–ù–∞–ø–∏—à–∏ –º–Ω–µ /menu, —á—Ç–æ–±—ã –æ—Ç—Ä—ã—Ç—å –º–µ–Ω—é, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω–æ—Ñ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏, " + \
              "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –∑–∞–¥–∞–Ω–∏—è –∏–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å HR –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, " + \
              "–∞ —Ç–∞–∫–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã. –ò –≤—Å—ë —ç—Ç–æ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è"
        bot.send_message(message.chat.id, msg)


@bot.message_handler(commands=['menu'])
def menu(message):
    if (str(message.chat.id),) in DB.getQueue():
        bot.send_message(message.chat.id, "–í—ã –≤ –æ—á–µ—Ä–µ–¥–∏! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫.")
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        item1 = types.KeyboardButton('–û –Ω–∞—Å üè¢')
        item2 = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å ü™™')
        item3 = types.KeyboardButton('–°–≤—è–∑—å —Å HR ‚òéÔ∏è')
        item4 = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è üìñ')
        item5 = types.KeyboardButton('–ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã üìã')
        item6 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑ üèÜ')
        item7 = types.KeyboardButton('/help')
        markup.add(item1, item2, item3, item4, item5, item6, item7)
        if DB.if_user_admin(message.chat.id):
            markup.add(types.KeyboardButton('/menu_for_admin'))
        bot.send_message(message.chat.id, f'–° —á–µ–º –≤–∞–º –ø–æ–º–æ—á—å, {message.chat.first_name}?',
                         reply_markup=markup)


@bot.message_handler(commands=['menu_for_admin'])
def menu_for_admin(message):
    if (str(message.chat.id),) in DB.getQueue():
        bot.send_message(message.chat.id, "–í—ã –≤ –æ—á–µ—Ä–µ–¥–∏! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫.")
    else:
        if DB.if_user_admin(message.chat.id):
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
            item1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è üí°')
            item2 = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ ü™™')
            item3 = types.KeyboardButton('–û—Ç–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ —Å–æ —Å—Ç–∞–∂–µ—Ä–æ–º üó£Ô∏è')
            item4 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ ü•∫')
            item5 = types.KeyboardButton('/menu')
            markup.add(item1, item2, item3, item4, item5)
            bot.send_message(message.chat.id, f'–° —á–µ–º –≤–∞–º –ø–æ–º–æ—á—å, {message.chat.first_name}?',
                             reply_markup=markup)
        else:
            bot.send_message(message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")


@bot.message_handler(content_types=['text', 'photo', 'sticker'])
def message_echo(message):
    if message.text == '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥ üö´':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        item1 = types.KeyboardButton('–û –Ω–∞—Å üè¢')
        item2 = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å ü™™')
        item3 = types.KeyboardButton('–°–≤—è–∑—å —Å HR ‚òéÔ∏è')
        item4 = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è üìñ')
        item5 = types.KeyboardButton('–ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã üìã')
        item6 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑ üèÜ')
        markup.add(item1, item2, item3, item4, item5, item6)
        if DB.if_user_admin(DB.getIDinterlocutor(message.chat.id)):
            markup.add(types.KeyboardButton('/menu_for_admin'))
        bot.send_message(DB.getIDinterlocutor(message.chat.id), '–î–∏–∞–ª–æ–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!', reply_markup=markup)
        bot.send_message(message.chat.id, '–î–∏–∞–ª–æ–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!')
        DB.deleteChatActive(message.chat.id)
        menu(message)
    elif DB.isChatActive(message.chat.id): # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É
        if message.photo:
            bot.send_photo(DB.getIDinterlocutor(message.chat.id), message.photo[0].file_id, message.caption)
        elif message.sticker:
            bot.send_sticker(DB.getIDinterlocutor(message.chat.id), message.sticker.file_id)
        else:
            bot.send_message(DB.getIDinterlocutor(message.chat.id), message.text)

    elif message.text == "–û –Ω–∞—Å üè¢":
        bot.send_message(message.chat.id, "–ü–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∑–∞ –≤—Å–µ–π –Ω—É–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π :)")
        bot.send_message(message.chat.id, "https://disk.yandex.ru/d/SO7F8r0xI3DAsg")

    elif message.text == "–ü–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å ü™™":
        bot.send_message(message.chat.id,
                         f"--  {DB.getCurrentDate()}  --\n" + \
                         f"{message.chat.first_name}, –≤–æ—Ç —Å–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è –±–∞–ª–ª–æ–≤: {DB.getExp(message.chat.id)}\n" + \
                         f"–í–∞—à ID: {message.chat.id}")

    elif message.text == "–°–≤—è–∑—å —Å HR ‚òéÔ∏è":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        item1 = types.KeyboardButton("–î–∞, –ø—Ä–æ—á–∏—Ç–∞–ª üëçüèª")
        item2 = types.KeyboardButton("–ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ üëéüèª")
        markup.add(item1, item2)
        bot.send_message(message.chat.id, "–í—ã —Ç–æ—á–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–ª–∏ –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏?", reply_markup=markup)

    elif message.text == "–î–∞, –ø—Ä–æ—á–∏—Ç–∞–ª üëçüèª":
        chat_hr(message)

    elif message.text == "–ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ üëéüèª":
        menu(message)

    elif message.text == '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ üö´':
        DB.deleteQueue(message.chat.id)
        menu(message)

    elif message.text == "–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è üìñ":
        tasks = DB.getTasks(message.chat.id)
        if tasks:
            mes = f"–í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–≤–æ–∏—Ö –∑–∞–¥–∞–Ω–∏–π:\n"
            for num, elem in enumerate(tasks, start=1):
                mes += f"{num}. {elem[1]}.  –ö–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤: {elem[2]},  –¥–µ–¥–ª–∞–π–Ω: {elem[3]}\n"
            bot.send_message(message.chat.id, mes)
        else:
            bot.send_message(message.chat.id, "–£ —Ç–µ–±—è –Ω–µ—Ç —Ç–µ–∫—É—â–∏—Ö –∑–∞–¥–∞–Ω–∏–π, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é!")

    elif message.text == "–ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã üìã":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        item1 = types.KeyboardButton("–î–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É ü´±üèª‚Äçü´≤üèª")
        item2 = types.KeyboardButton("–ö–∞–∫ —É–π—Ç–∏ –≤ –æ—Ç–ø—É—Å–∫? üèùÔ∏è")
        item3 = types.KeyboardButton("–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ ü•∫")
        item4 = types.KeyboardButton("/menu")
        markup.add(item1, item2, item3, item4)
        bot_msg = bot.send_message(message.chat.id, "–ö–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)
        bot.register_next_step_handler(bot_msg, get_documents)



    elif message.text == "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑ üèÜ":
        bot.send_message(message.chat.id, DB.check_for_win(message.chat.id))

    # –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
    elif DB.if_user_admin(message.chat.id):
        if message.text == "–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ ü™™":
            data = DB.get_info_of_workers()
            msg = ""
            for num, elem in enumerate(data, start=1):
                msg += f"{num}. @{elem[2]};\n–¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ - {elem[0]};\n–∫–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤ - {elem[3]};\n–≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –≤—Å—Ç—Ä–µ—á–µ: {elem[4]}\n\n"
            bot.send_message(message.chat.id, msg)
                                 

        elif message.text == "–£–¥–∞–ª–∏—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ ü•∫":
            bot_msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID —Ä–∞–±–æ—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –∂–µ–ª–∞–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å")
            bot.register_next_step_handler(bot_msg, deleteIntern)

        elif message.text == "–û—Ç–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ —Å–æ —Å—Ç–∞–∂–µ—Ä–æ–º üó£Ô∏è":
            q = DB.getQueue()
            if q:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                markup.add(types.KeyboardButton('–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥ üö´'))
                DB.deleteQueue(q[0][0])
                DB.appendChatActive(q[0][0], message.chat.id)
                bot.send_message(message.chat.id, "–í—ã –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ –¥–∏–∞–ª–æ–≥—É!", reply_markup=markup)
                bot.send_message(q[0][0], "–í—ã –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ –¥–∏–∞–ª–æ–≥—É, –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã!", reply_markup=markup)
            else:
                bot.send_message(message.chat.id, "–í –æ—á–µ—Ä–µ–¥–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç!")
                menu_for_admin(message)
        else:
            if (str(message.chat.id),) in DB.getQueue():
                bot.send_message(message.chat.id, "–í—ã –≤ –æ—á–µ—Ä–µ–¥–∏! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫.")
            else:
                bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É")
                menu_for_admin(message)
    else:
        if (str(message.chat.id),) in DB.getQueue():
            bot.send_message(message.chat.id, "–í—ã –≤ –æ—á–µ—Ä–µ–¥–∏! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫.")
        else:
            bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É")
            menu(message)


def get_documents(message):
    if message.text == "–î–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É ü´±üèª‚Äçü´≤üèª":
        msg = "–í–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è:\n" + \
              "‚Äì –ø–∞—Å–ø–æ—Ä—Ç c —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –∏–ª–∏ –∏–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç, —É–¥–æ—Å—Ç–æ–≤–µ—Ä—è—é—â–∏–π –ª–∏—á–Ω–æ—Å—Ç—å;\n" + \
              "‚Äì –¥–æ–∫—É–º–µ–Ω—Ç –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –∏ (–∏–ª–∏) –æ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–ª–∏ –Ω–∞–ª–∏—á–∏–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π\n" + \
              "‚Äì —Å–ø—Ä–∞–≤–∫—É –æ –Ω–∞–ª–∏—á–∏–∏ (–æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏) —Å—É–¥–∏–º–æ—Å—Ç–∏\n" + \
              "‚Äì —Ç—Ä—É–¥–æ–≤–∞—è –∫–Ω–∏–∂–∫–∞ (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏)."
        bot.send_message(message.chat.id, msg)

    elif message.text == "–ö–∞–∫ —É–π—Ç–∏ –≤ –æ—Ç–ø—É—Å–∫? üèùÔ∏è":
        days_left = DB.check_for_data(message.chat.id)
        if days_left <= 0:
            planned = f"–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –≤ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–ø—É—Å–∫ —É–∂–µ —Å–µ–π—á–∞—Å!"
        else:
            planned = f"–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –≤ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–ø—É—Å–∫ —á–µ—Ä–µ–∑ {days_left} –¥–Ω–µ–π"
        bot.send_message(message.chat.id, planned)
        unplanned = "–í—ã –º–æ–∂–µ—Ç–µ —É–π—Ç–∏ –≤ –Ω–µ–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–ø—É—Å–∫, –µ—Å–ª–∏ –≤—ã –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç–µ –æ–¥–Ω–æ–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –≥—Ä—É–ø–ø:\n" + \
                    "‚Äì –∂–µ–Ω—â–∏–Ω—ã ‚Äî –¥–æ –¥–µ–∫—Ä–µ—Ç–∞ –∏ –ø–æ—Å–ª–µ –Ω–µ–≥–æ. –ò –∏—Ö –º—É–∂—å—è;\n" + \
                    "‚Äì —Ä–∞–±–æ—Ç–Ω–∏–∫–∏ –¥–æ 18 –ª–µ—Ç;\n" + \
                    "‚Äì —É—Å—ã–Ω–æ–≤–∏—Ç–µ–ª–∏ –¥–µ—Ç–µ–π –¥–æ —Ç—Ä–µ—Ö –º–µ—Å—è—Ü–µ–≤;\n" + \
                    "‚Äì c–æ–≤–º–µ—Å—Ç–∏—Ç–µ–ª–∏, –µ—Å–ª–∏ —É –Ω–∏—Ö –æ—Ç–ø—É—Å–∫ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–∞–±–æ—Ç–µ."
        bot.send_message(message.chat.id, unplanned)

    elif message.text == "–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ ü•∫":
        getAwayDoc = open('media/documents/–ó–∞—è–≤–ª–µ–Ω–∏–µ –æ–± —É–≤–æ–ª—å–Ω–µ–Ω–∏–∏.docx', 'rb')
        bot.send_document(message.chat.id, getAwayDoc, caption="–í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ –∑–∞—è–≤–ª–µ–Ω–∏–µ")
    
    elif message.text == "/menu":
        pass

    else:
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª")
    menu(message)


def chat_hr(message):
    DB.appendQueue(message.chat.id)
    for i in DB.getAdminList():
        bot.send_message(int(i), f"–°—Ç–∞–∂–µ—Ä –≤—Å—Ç–∞–ª –≤ –æ—á–µ—Ä–µ–¥—å! –°–µ–π—á–∞—Å –≤ –æ—á–µ—Ä–µ–¥–∏ {len(DB.getQueue())}")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    markup.add(types.KeyboardButton('–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ üö´'))
    bot.send_message(message.chat.id, "–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —á–∞—Ç—É", reply_markup=markup)


def complete_task(message):
    bot.send_message(message.chat.id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –∑–∞–¥–∞–Ω–∏–µ! –ë–∞–ª–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å :)")


def deleteIntern(message):
    if DB.getData(message.text):
        bot.send_message(message.chat.id, DB.deleteUser(message.text))
    else:
        bot.send_message(message.chat.id, "–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    menu_for_admin(message)

def start():
    bot.infinity_polling()
